(**************************************************************************)
(*                                                                        *)
(*   Typerex Tools                                                        *)
(*                                                                        *)
(*   Copyright 2011-2017 OCamlPro SAS                                     *)
(*                                                                        *)
(*   All rights reserved.  This file is distributed under the terms of    *)
(*   the GNU General Public License version 3 described in the file       *)
(*   LICENSE.                                                             *)
(*                                                                        *)
(**************************************************************************)

(* Autogenerated from "typecheck-lib.cma" *)
module Result = Typecheck_result
module IO = Typecheck_iO
module Uf = Typecheck_uf
module Flags = Typecheck_flags
module Pretty = Typecheck_pretty
module Ctype = Typecheck_ctype
module Utils = Typecheck_utils
module Types = Typecheck_types
module Typing = Typecheck_typing
module Typecore2 = Typecheck_typecore2
module Typexpr = Typecheck_typexpr
module Typedecl = Typecheck_typedecl
module Expr = Typecheck_expr
module Class = Typecheck_class
module Typemod = Typecheck_typemod
module Report = Typecheck_report

let initial_env modulename =
    Env.set_unit_name modulename;
    Compmisc.init_path false;
    Compmisc.initial_env()

let implementation ?outdir (ast, filename, modname) =
  try
    Ctype.init_def(Ident.current_time());
    let env = initial_env modname in
    let _, _ =
      Typemod.type_structure
        (Types.create_context env) None ast in
    ()
  with exn ->
    Report.write_report ?outdir filename [exn]
